library(dplyr)
library(forcats)
library(langcog)
library(imager)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(langcog)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(dplyr)
library(forcats)
library(imager)
files <- dir("../production-results/")
d.raw <- data.frame()
for (f in files) {
jf <- paste("../production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
seenObject = as.numeric(jd$answers$data$seenObject)[1:85],
knowFunction = as.numeric(jd$answers$data$knowFunction)[1:85],
knowLabel = as.numeric(jd$answers$data$knowObjectLabel)[1:85],
childsAge = jd$answers$data$childsAge,
imageName = jd$answers$data$imageName)
d.raw <- bind_rows(d.raw, id)
}
# function for shorter filename extraction
shortFileName <- function(fileName){
out=strsplit(as.character(fileName),"/")[[1]][8]
}
# make shorter iamge names for plots, etc.
d.raw <- d.raw %>%
group_by(imageName) %>%
mutate(imageNameShort = shortFileName(imageName))
# pre-process: get children's age and filter by too young/old
thres=.25
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) %>% ## only get unfamiliar objects
mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) ## reorders varibles accordinf to #avgSeenObject for plotting
files <- dir("../production-results/")
d.raw <- data.frame()
for (f in files) {
jf <- paste("../production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
seenObject = as.numeric(jd$answers$data$seenObject)[1:85],
knowFunction = as.numeric(jd$answers$data$knowFunction)[1:85],
knowLabel = as.numeric(jd$answers$data$knowObjectLabel)[1:85],
childsAge = jd$answers$data$childsAge,
imageName = jd$answers$data$imageName)
d.raw <- bind_rows(d.raw, id)
}
# function for shorter filename extraction
shortFileName <- function(fileName){
out=strsplit(as.character(fileName),"/")[[1]][8]
}
# make shorter iamge names for plots, etc.
d.raw <- d.raw %>%
group_by(imageName) %>%
mutate(imageNameShort = shortFileName(imageName))
# pre-process: get children's age and filter by too young/old
thres=.25
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) %>% ## only get unfamiliar objects
mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) ## reorders varibles accordinf to #avgSeenObject for plotting
files <- dir("../production-results/")
d.raw <- data.frame()
for (f in files) {
jf <- paste("../production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
seenObject = as.numeric(jd$answers$data$seenObject)[1:85],
knowFunction = as.numeric(jd$answers$data$knowFunction)[1:85],
knowLabel = as.numeric(jd$answers$data$knowObjectLabel)[1:85],
childsAge = jd$answers$data$childsAge,
imageName = jd$answers$data$imageName)
d.raw <- bind_rows(d.raw, id)
}
# function for shorter filename extraction
shortFileName <- function(fileName){
out=strsplit(as.character(fileName),"/")[[1]][8]
}
# make shorter iamge names for plots, etc.
d.raw <- d.raw %>%
group_by(imageName) %>%
mutate(imageNameShort = shortFileName(imageName))
d.raw
d.raw$imageNameShort
d.unfamiliar <- d.raw %>%
group_by(imageNameShort)
d.unfamiliar
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) %>% ## only get unfamiliar objects
mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject))
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE)
# pre-process: get children's age and filter by too young/old
thres=.25
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) ## reorders varibles accordinf to #avgSeenObject for plotting
# pre-process: get children's age and filter by too young/old
thres=.25
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) ## reorders varibles accordinf to #avgSeenObject for plotting
# pre-process: get children's age and filter by too young/old
thres=.25
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) %>% ## reorders varibles accordinf to #avgSeenObject for plotting
mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) ## only get unfamiliar objects
# pre-process: get children's age and filter by too young/old
thres=.25
d.unfamiliar <- d.raw %>%
mutate(imageNameShort = as.factor(imageNameShort)) %>%
group_by(imageNameShort) %>%
summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) %>% ## reorders varibles accordinf to #avgSeenObject for plotting
mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) ## only get unfamiliar objects
d.unfamld.unfamiliar <- d.raw %>%
mutate(imageNameShort = as.factor(imageNameShort))````
d.unfamiliar <- d.raw %>%
mutate(imageNameShort = as.factor(imageNameShort))
d.unfamiliar <- d.raw %>%
mutate(imageNameShort = as.factor(imageNameShort)) %>%
group_by(imageNameShort)
d.unfamiliar <- d.raw %>%
mutate(imageNameShort = as.factor(imageNameShort)) %>%
group_by(imageNameShort) %>%
summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction))
d.unfamiliar
d.unfamiliar <- d.raw %>%
mutate(imageNameShort = as.factor(imageNameShort)) %>%
group_by(imageNameShort) %>%
dplyr::summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) %>% ## reorders varibles accordinf to #avgSeenObject for plotting
mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) ## only get unfamiliar objects
d.unfamiliar
d.raw
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
dplyr::summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction))
d.unfamiliar
library(tidyverse)
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
dplyr::summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) %>% ## reorders varibles accordinf to #avgSeenObject for plotting
mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) ## only get unfamiliar objects
d.unfamiliar
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(langcog)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(dplyr)
library(forcats)
library(imager)
files <- dir("../production-results/")
d.raw <- data.frame()
for (f in files) {
jf <- paste("../production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
seenObject = as.numeric(jd$answers$data$seenObject)[1:85],
knowFunction = as.numeric(jd$answers$data$knowFunction)[1:85],
knowLabel = as.numeric(jd$answers$data$knowObjectLabel)[1:85],
childsAge = jd$answers$data$childsAge,
imageName = jd$answers$data$imageName)
d.raw <- bind_rows(d.raw, id)
}
# function for shorter filename extraction
shortFileName <- function(fileName){
out=strsplit(as.character(fileName),"/")[[1]][8]
}
# make shorter iamge names for plots, etc.
d.raw <- d.raw %>%
group_by(imageName) %>%
mutate(imageNameShort = shortFileName(imageName))
# pre-process: get children's age and filter by too young/old
thres=.25
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
dplyr::summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) %>% ## reorders varibles accordinf to #avgSeenObject for plotting
mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) ## only get unfamiliar objects
ggplot(d.unfamiliar, aes(x = as.factor(imageNameShort), y = avgSeenObject)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
write.csv(d.unfamiliar,"UnfamiliarObjects_ForNorming.csv")
file <- system.file('extdata/parrots.png',package='imager')
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(langcog)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(forcats)
library(imager)
library(tidyverse)
files <- dir("../production-results/")
d.raw <- data.frame()
for (f in files) {
jf <- paste("../production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
seenObject = as.numeric(jd$answers$data$seenObject)[1:85],
knowFunction = as.numeric(jd$answers$data$knowFunction)[1:85],
knowLabel = as.numeric(jd$answers$data$knowObjectLabel)[1:85],
childsAge = jd$answers$data$childsAge,
imageName = jd$answers$data$imageName)
d.raw <- bind_rows(d.raw, id)
}
# function for shorter filename extraction
shortFileName <- function(fileName){
out=strsplit(as.character(fileName),"/")[[1]][8]
}
# make shorter iamge names for plots, etc.
d.raw <- d.raw %>%
group_by(imageName) %>%
mutate(imageNameShort = shortFileName(imageName))
# pre-process: get children's age and filter by too young/old
thres=.25
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
dplyr::summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) %>% ## reorders varibles accordinf to #avgSeenObject for plotting
mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) ## only get unfamiliar objects
d.unfamiliar
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) %>% ## reorders varibles accordinf to #avgSeenObject for plotting
mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) ## only get unfamiliar objects
d.unfamiliar <- d.raw %>%
group_by(imageNameShort)
d.unfamiliar
d.raw <- d.raw %>%
group_by(imageName) %>%
mutate(imageNameShort = shortFileName(imageName))
d.raw
d.raw$imageNameShort
unique(d.raw$imageNameShort)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(imager)
library(langcog)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(forcats)
library(tidyverse)
tidyverse
files <- dir("../production-results/")
d.raw <- data.frame()
for (f in files) {
jf <- paste("../production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
seenObject = as.numeric(jd$answers$data$seenObject)[1:85],
knowFunction = as.numeric(jd$answers$data$knowFunction)[1:85],
knowLabel = as.numeric(jd$answers$data$knowObjectLabel)[1:85],
childsAge = jd$answers$data$childsAge,
imageName = jd$answers$data$imageName)
d.raw <- bind_rows(d.raw, id)
}
# function for shorter filename extraction
shortFileName <- function(fileName){
out=strsplit(as.character(fileName),"/")[[1]][8]
}
# make shorter iamge names for plots, etc.
d.raw <- d.raw %>%
group_by(imageName) %>%
mutate(imageNameShort = shortFileName(imageName))
d.raw
d.raw$imageNameShort
d.raw <- d.raw %>%
dplyr::group_by(imageName) %>%
mutate(imageNameShort = shortFileName(imageName))
d.raw
d.raw$imageNameShort
unique(d.raw$imageNameShort)
unique(d.raw$imageNameShort)
files <- dir("../production-results/")
d.raw <- data.frame()
for (f in files) {
jf <- paste("../production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
seenObject = as.numeric(jd$answers$data$seenObject)[1:85],
knowFunction = as.numeric(jd$answers$data$knowFunction)[1:85],
knowLabel = as.numeric(jd$answers$data$knowObjectLabel)[1:85],
childsAge = jd$answers$data$childsAge,
imageName = jd$answers$data$imageName)
d.raw <- bind_rows(d.raw, id)
}
d.raw
d.raw$imageName
unique(d.raw$imageName)
tidyverse::dplyr
tidyr::dplyr
tidyr::group_by
tidyverse::group_by
dplyr::group_by
plyr::group_by
? group_by
? mutate
d.raw <- d.raw %>%
group_by(imageName) %>%
dplyr::mutate(imageNameShort = shortFileName(imageName))
d.raw$imageNameShort
# pre-process: get children's age and filter by too young/old
thres=.25
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
dplyr::mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) %>% ## reorders varibles accordinf to #avgSeenObject for plotting
dplyr::mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) ## only get unfamiliar objects
files <- dir("../production-results/")
d.raw <- data.frame()
for (f in files) {
jf <- paste("../production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
seenObject = as.numeric(jd$answers$data$seenObject)[1:85],
knowFunction = as.numeric(jd$answers$data$knowFunction)[1:85],
knowLabel = as.numeric(jd$answers$data$knowObjectLabel)[1:85],
childsAge = jd$answers$data$childsAge,
imageName = jd$answers$data$imageName)
d.raw <- bind_rows(d.raw, id)
}
# function for shorter filename extraction
shortFileName <- function(fileName){
out=strsplit(as.character(fileName),"/")[[1]][8]
}
# make shorter iamge names for plots, etc.
d.raw <- d.raw %>%
group_by(imageName) %>%
dplyr::mutate(imageNameShort = shortFileName(imageName))
d.raw$imageNameShort
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction))
d.unfamiliar
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
dplyr::summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
dplyr::mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) %>% ## reorders varibles accordinf to #avgSeenObject for plotting
dplyr::mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) ## only get unfamiliar objects
d.unfamiliar
ggplot(d.unfamiliar, aes(x = as.factor(imageNameShort), y = avgSeenObject)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
d.unfamiliar
d.unfamiliar$imageNameShort
# pre-process: get children's age and filter by too young/old
thres=.25
d.unfamiliar <- d.raw %>%
group_by(imageNameShort, imageName) %>%
dplyr::summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
dplyr::mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) %>% ## reorders varibles accordinf to #avgSeenObject for plotting
dplyr::mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) ## only get unfamiliar objects
# pre-process: get children's age and filter by too young/old
thres=.25
d.unfamiliar <- d.raw %>%
group_by(imageNameShort, imageName) %>%
dplyr::summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
dplyr::mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) %>% ## reorders varibles accordinf to #avgSeenObject for plotting
dplyr::mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) ## only get unfamiliar objects
# pre-process: get children's age and filter by too young/old
thres=.25
d.unfamiliar <- d.raw %>%
group_by(imageNameShort) %>%
dplyr::summarize(avgSeenObject = mean(seenObject), avgKnowLabel = mean(knowLabel), avgKnowFunction = mean(knowFunction)) %>%
dplyr::mutate(imageNameShort = fct_reorder(imageNameShort, avgSeenObject)) %>% ## reorders varibles accordinf to #avgSeenObject for plotting
dplyr::mutate(unFamiliar = (avgSeenObject<= thres & avgKnowLabel<=thres  & avgKnowFunction<=thres)) %>%
filter(unFamiliar == TRUE) ## only get unfamiliar objects
d.raw
d.raw$imageName
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(imager)
library(langcog)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(forcats)
library(tidyverse)
library(here)
d.unfamiliar
imgPath= 'stimuliGeneration/famRatings/experiment/imagesToNorm/'
here::here(imgPath)
file <- system.file(here::here(imgPath),'0.59_Afingeraccess.jpg',package='imager')
file
file <- system.file(paste0(here::here(imgPath),'0.59_Afingeraccess.jpg'),package='imager')
file
paste0(here::here(imgPath),'0.59_Afingeraccess.jpg')
file <- system.file('extdata/parrots.png',package='imager')
system.file(paste0(here::here(imgPath),'0.59_Afingeraccess.jpg'),package='imager')
paste0(here::here(imgPath),'0.59_Afingeraccess.jpg')
paste0(here::here(imgPath),'0.59_Afingeraccess.jpg')
file <- system.file('extdata/parrots.png',package='imager')
parrots <- load.image(file)
parrots
file
paste0(here::here(imgPath),'0.59_Afingeraccess.jpg')
setwd("~/Documents/GitHub/label-cats/stimuliGeneration/famRatings/analysis")
file <- file(paste0(here::here(imgPath),'0.59_Afingeraccess.jpg'),package='imager')
fileName =paste0(here::here(imgPath),'0.59_Afingeraccess.jpg')
fileName
load.image(fileName)
test=load.image(fileName)
plot(test)
saveImages <- d.unfamiliar %>%
mutate(fileName = paste0(here::here(imgPath),imageNameShort))
saveImages
saveImages$fileName
saveImages <- d.unfamiliar %>%
mutate(fileName = paste0(here::here(imgPath),imageNameShort)) %>%
mutate(saveFileName = paste0(here::here(imgPathSave),imageNameShort))
imgPath= '/stimuliGeneration/famRatings/experiment/imagesToNorm/'
imgPathSave= '/stimuliGeneration/famRatings/analysis/selectedImages/'
saveImages <- d.unfamiliar %>%
mutate(fileName = paste0(here::here(imgPath),imageNameShort)) %>%
mutate(saveFileName = paste0(here::here(imgPathSave),imageNameShort))
saveImages$saveFileName
saveImages <- d.unfamiliar %>%
mutate(fileName = paste0(here::here(imgPath),imageNameShort)) %>%
mutate(saveFileName = paste0(here::here(imgPathSave),imageNameShort))
do(thisImage <- load.image(fileName))
saveImages <- d.unfamiliar %>%
mutate(fileName = paste0(here::here(imgPath),imageNameShort)) %>%
mutate(saveFileName = paste0(here::here(imgPathSave),imageNameShort))
do(load.image(fileName))
? do
for (image in saveImages$fileName) {
print(image)
}
for (imageInd in 1:length(saveImages$fileName)) {
thisImageName = saveImages$fileName[imageInd]
thisImage=load.image(thisImageName)
thisSaveImName = saveImages$saveFileName[imageInd]
imager::save.image(thisImage,thisSaveImName)
}
thisImageName
saveImages$saveFileName = gsub("%20p", " ", saveImages$saveFileName)
saveImages$saveFileName
saveImages$saveFileName = gsub("%20", " ", saveImages$saveFileName)
saveImages$imageNameShort
saveImages$saveFileName
imgPath= 'stimuliGeneration/famRatings/experiment/imagesToNorm/'
imgPathSave= 'stimuliGeneration/famRatings/analysis/selectedImages/'
saveImages <- d.unfamiliar %>%
mutate(fileName = paste0(here::here(imgPath),imageNameShort)) %>%
mutate(saveFileName = paste0(here::here(imgPathSave),imageNameShort))
# turn special characters pack into spaces
saveImages$saveFileName = gsub("%20", " ", saveImages$saveFileName)
for (imageInd in 1:length(saveImages$fileName)) {
thisImageName = saveImages$fileName[imageInd]
thisImage=load.image(thisImageName)
thisSaveImName = saveImages$saveFileName[imageInd]
imager::save.image(thisImage,thisSaveImName)
}
thisImage
thisImageName
imgPath= 'stimuliGeneration/famRatings/experiment/imagesToNorm/'
imgPathSave= 'stimuliGeneration/famRatings/analysis/selectedImages/'
saveImages <- d.unfamiliar %>%
mutate(fileName = paste0(here::here(imgPath),imageNameShort)) %>%
mutate(saveFileName = paste0(here::here(imgPathSave),imageNameShort))
saveImages
saveImages$saveFileName
saveImages$saveFileName = gsub("%20", " ", saveImages$saveFileName)
saveImages$saveFileName
saveImages$saveFileName = gsub("%20", " ", saveImages$saveFileName)
saveImages$fileName = gsub("%20", " ", saveImages$fileName)
for (imageInd in 1:length(saveImages$fileName)) {
thisImageName = saveImages$fileName[imageInd]
thisImage=load.image(thisImageName)
thisSaveImName = saveImages$saveFileName[imageInd]
imager::save.image(thisImage,thisSaveImName)
}
